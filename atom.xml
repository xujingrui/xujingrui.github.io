<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>My Blog</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2017-12-31T12:33:21.269Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>XuJingRui</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Jenkins持续集成引擎</title>
    <link href="http://yoursite.com/2017/12/30/Jenkins/"/>
    <id>http://yoursite.com/2017/12/30/Jenkins/</id>
    <published>2017-12-30T13:59:46.000Z</published>
    <updated>2017-12-31T12:33:21.269Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Jenkins简介"><a href="#Jenkins简介" class="headerlink" title="Jenkins简介"></a>Jenkins简介</h2><p>　　　　　</p><p><img src="https://ss3.bdstatic.com/70cFv8Sh_Q1YnxGkpoWK1HF6hhy/it/u=1246883031,4171520902&amp;fm=27&amp;gp=0.jpg" alt="aa-1"></p><p>　　</p><p>目前持续集成(CI)已成为当前许多软件开发团队在整个软件开发生命周期内侧重于保证代码质量的常见做法。它是一种实践，旨在缓和和稳固软件的构建过程。并且能够帮助您的开发团队应对如下挑战：</p><ul><li>软件构建自动化 ：配置完成后，CI系统会依照预先制定的时间表，或者针对某一特定事件，对目标软件进行构建。</li><li>构建可持续的自动化检查 ：CI系统能持续地获取新增或修改后签入的源代码，也就是说，当软件开发团队需要周期性的检查新增或修改后的代码时，CI系统会不断确认这些新代码是否破坏了原有软件的成功构建。这减少了开发者们在检查彼此相互依存的代码中变化情况需要花费的时间和精力(说直接一点也是钱啊，呵呵)。</li><li>构建可持续的自动化测试 ：构建检查的扩展部分，构建后执行预先制定的一套测试规则，完成后触发通知(Email,RSS等等)给相关的当事人。</li><li>生成后后续过程的自动化 :当自动化检查和测试成功完成，软件构建的周期中可能也需要一些额外的任务，诸如生成文档、打包软件、部署构件到一个运行环境或者软件仓库。这样，构件才能更迅速地提供给用户使用。<br>部署一个CI系统需要的最低要求是，一个可获取的源代码的仓库，一个包含构建脚本的项目。</li></ul><p>下图概括了CI系统的基本结构：</p><p><img src="https://raw.githubusercontent.com/xujingrui/xujingrui.github.io/master/home/images/jenkins-1.jpg" alt="aa-2"></p><h2 id="Jenkins安装"><a href="#Jenkins安装" class="headerlink" title="Jenkins安装"></a>Jenkins安装</h2><table><thead><tr><th>项目</th><th>版本</th></tr></thead><tbody><tr><td>Jdk</td><td>1.8.0_151</td></tr><tr><td>Jenkins</td><td>2.89.2</td></tr></tbody></table><h4 id="Jdk安装："><a href="#Jdk安装：" class="headerlink" title="Jdk安装："></a>Jdk安装：</h4><p>下载Jdk版本<code>http://www.oracle.com/technetwork/java/javase/downloads/index.html</code></p><p>下载后上传到服务器解压文件。配置环境变量：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">cd /data</span><br><span class="line">tar -xvf jdk-8u151-linux-x64.tar.gz</span><br><span class="line"></span><br><span class="line">vim /etc/profile</span><br><span class="line"></span><br><span class="line">export JAVA_HOME=/data/jdk1.8.0_151</span><br><span class="line">export PATH=$JAVA_HOME/bin:$PATH</span><br><span class="line">export CLASSPATH=.:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar</span><br><span class="line"></span><br><span class="line">source /etc/profile</span><br></pre></td></tr></table></figure></p><p>验证Jdk:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost jdk1.8.0_151]# which java</span><br><span class="line">/data/jdk1.8.0_151/bin/java</span><br><span class="line">[root@localhost jdk1.8.0_151]# java -version</span><br><span class="line">java version &quot;1.8.0_151&quot;</span><br><span class="line">Java(TM) SE Runtime Environment (build 1.8.0_151-b12)</span><br><span class="line">Java HotSpot(TM) 64-Bit Server VM (build 25.151-b12, mixed mode)</span><br></pre></td></tr></table></figure><h4 id="Jenkins安装-1"><a href="#Jenkins安装-1" class="headerlink" title="Jenkins安装"></a>Jenkins安装</h4><p>下载：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget http://mirrors.jenkins.io/war-stable/latest/jenkins.war -O /data/jenkins.war</span><br></pre></td></tr></table></figure><p>启动：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java -jar /data/jenkins.war &amp;&gt;/data/jenkins.log &amp;</span><br></pre></td></tr></table></figure><p>Jenkins默认启动8080端口，如果如要修改端口参考以下命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java -jar /data/jenkins.war --httpPort=8000  &amp;&gt;/data/jenkins.log &amp;</span><br></pre></td></tr></table></figure><p>启动后在root家目录生成文件：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# ll ~/.jenkins/</span><br><span class="line">总用量 40</span><br><span class="line">-rw-r--r--  1 root root 1685 12月 31 19:53 config.xml</span><br><span class="line">-rw-r--r--  1 root root  156 12月 31 19:53 hudson.model.UpdateCenter.xml</span><br><span class="line">-rw-------  1 root root 1712 12月 31 19:53 identity.key.enc</span><br><span class="line">-rw-r--r--  1 root root   94 12月 31 19:53 jenkins.CLI.xml</span><br><span class="line">-rw-r--r--  1 root root    6 12月 31 19:53 jenkins.install.UpgradeWizard.state</span><br><span class="line">drwxr-xr-x  2 root root    6 12月 31 19:53 jobs</span><br><span class="line">drwxr-xr-x  3 root root   19 12月 31 19:53 logs</span><br><span class="line">-rw-r--r--  1 root root  907 12月 31 19:53 nodeMonitors.xml</span><br><span class="line">drwxr-xr-x  2 root root    6 12月 31 19:53 nodes</span><br><span class="line">drwxr-xr-x  2 root root    6 12月 31 19:53 plugins</span><br><span class="line">-rw-r--r--  1 root root  129 12月 31 19:52 queue.xml.bak</span><br><span class="line">-rw-r--r--  1 root root   64 12月 31 19:53 secret.key</span><br><span class="line">-rw-r--r--  1 root root    0 12月 31 19:53 secret.key.not-so-secret</span><br><span class="line">drwxr-xr-x  4 root root 4096 12月 31 19:53 secrets</span><br><span class="line">drwxr-xr-x  2 root root  100 12月 31 19:53 updates</span><br><span class="line">drwxr-xr-x  2 root root   24 12月 31 19:53 userContent</span><br><span class="line">drwxr-xr-x  3 root root   19 12月 31 19:53 users</span><br><span class="line">drwxr-xr-x 10 root root 4096 12月 31 19:51 war</span><br></pre></td></tr></table></figure><p>访问Jenkins页面：<a href="http://IP:8080/" target="_blank" rel="noopener">http://IP:8080/</a><br>输入Jenkins初始密码，密码文件/root/.jenkins/secrets/initialAdminPassword</p><p><img src="https://raw.githubusercontent.com/xujingrui/xujingrui.github.io/master/home/images/jenkins-2.jpg" alt="aa-3"></p><p>选择安装插件需求：</p><p><img src="https://raw.githubusercontent.com/xujingrui/xujingrui.github.io/master/home/images/jenkins-3.jpg" alt="aa-4"></p><p>Jenkins需要去国外仓库下载插件安装：</p><p><img src="https://raw.githubusercontent.com/xujingrui/xujingrui.github.io/master/home/images/jenkins-4.jpg" alt="aa-5"></p><p>安装插件后，填写信息<br><img src="https://raw.githubusercontent.com/xujingrui/xujingrui.github.io/master/home/images/jenkins-5.jpg" alt="aa-6"></p><p>开始使用：</p><p><img src="https://raw.githubusercontent.com/xujingrui/xujingrui.github.io/master/home/images/jenkins-6.jpg" alt="aa-7"></p><p>Jenkins页面:</p><p><img src="https://raw.githubusercontent.com/xujingrui/xujingrui.github.io/master/home/images/jenkins-7.jpg" alt="aa-8"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Jenkins简介&quot;&gt;&lt;a href=&quot;#Jenkins简介&quot; class=&quot;headerlink&quot; title=&quot;Jenkins简介&quot;&gt;&lt;/a&gt;Jenkins简介&lt;/h2&gt;&lt;p&gt;　
　
　
　
　&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://ss3.bds
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Docker虚拟化</title>
    <link href="http://yoursite.com/2017/12/28/docker/"/>
    <id>http://yoursite.com/2017/12/28/docker/</id>
    <published>2017-12-28T13:29:15.000Z</published>
    <updated>2017-12-31T11:49:58.319Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Docker介绍"><a href="#Docker介绍" class="headerlink" title="Docker介绍"></a>Docker介绍</h2><p>Docker 是一个开源的应用容器引擎，基于 Go 语言 并遵从Apache2.0协议开源。<br>Docker 可以让开发者打包他们的应用以及依赖包到一个轻量级、可移植的容器中，然后发布到任何流行的 Linux 机器上，也可以实现虚拟化。<br>容器是完全使用沙箱机制，相互之间不会有任何接口（类似 iPhone 的 app）,更重要的是容器性能开销极低。</p><p><img src="https://ss3.bdstatic.com/70cFv8Sh_Q1YnxGkpoWK1HF6hhy/it/u=3141540493,1060669034&amp;fm=27&amp;gp=0.jpg" alt="aaa"></p><h3 id="Docker的应用场景"><a href="#Docker的应用场景" class="headerlink" title="Docker的应用场景"></a>Docker的应用场景</h3><blockquote><ul><li>Web 应用的自动化打包和发布。</li><li>自动化测试和持续集成、发布。</li><li>在服务型环境中部署和调整数据库或其他的后台应用。</li><li>从头编译或者扩展现有的OpenShift或Cloud Foundry平台来搭建自己的PaaS环境。</li></ul></blockquote><h3 id="Docker-的优点"><a href="#Docker-的优点" class="headerlink" title="Docker 的优点"></a>Docker 的优点</h3><ul><li><strong>1、简化程序：</strong><br>Docker 让开发者可以打包他们的应用以及依赖包到一个可移植的容器中，然后发布到任何流行的 Linux 机器上，便可以实现虚拟化。Docker改变了虚拟化的方式，使开发者可以直接将自己的成果放入Docker中进行管理。方便快捷已经是 Docker的最大优势，过去需要用数天乃至数周的    任务，在Docker容器的处理下，只需要数秒就能完成。</li><li><strong>2、避免选择恐惧症：</strong><br>如果你有选择恐惧症，还是资深患者。Docker 帮你    打包你的纠结！比如 Docker 镜像；Docker 镜像中包含了运行环境和配置，所以 Docker 可以简化部署多种应用实例工作。比如 Web 应用、后台应用、数据库应用、大数据应用比如 Hadoop 集群、消息队列等等都可以打包成一个镜像部署。</li><li><strong>3、节省开支：</strong><br>一方面，云计算时代到来，使开发者不必为了追求效果而配置高额的硬件，Docker 改变了高性能必然高价格的思维定势。Docker 与云的结合，让云空间得到更充分的利用。不仅解决了硬件管理的问题，也改变了虚拟化的方式。</li></ul><h2 id="Docker安装"><a href="#Docker安装" class="headerlink" title="Docker安装"></a>Docker安装</h2><h3 id="注意："><a href="#注意：" class="headerlink" title="注意："></a>注意：</h3><blockquote><ul><li>Docker安装需要Linux内核3.0以上版本。</li><li>建议安装在Centos7版本以上的系统。</li></ul></blockquote><p><strong>应用场景</strong></p><table><thead><tr><th>项目</th><th>版本</th></tr></thead><tbody><tr><td>Linux</td><td>CentOS Linux release 7.3.1611</td></tr><tr><td>Docker</td><td>17.09.1-ce</td></tr></tbody></table><p>下载Docker源：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget https://download.docker.com/linux/centos/docker-ce.repo -O /etc/yum.repos.d/docker-ce.repo</span><br></pre></td></tr></table></figure><p>安装Docker:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum -y install docker-ce</span><br></pre></td></tr></table></figure><p>版本：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost /]# docker -v</span><br><span class="line">Docker version 17.09.1-ce, build 19e2cf6</span><br></pre></td></tr></table></figure><p>添加国内加速：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo &apos;&#123;&quot;registry-mirrors&quot;: [&quot;http://a91c78ed.m.daocloud.io&quot;]&#125;&apos; &gt; /etc/docker/daemon.json</span><br></pre></td></tr></table></figure><p>开机启动服务：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">systemctl start  docker</span><br><span class="line">systemctl enable  docker</span><br></pre></td></tr></table></figure><p>运行一个容器：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run hello-world</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/xujingrui/xujingrui.github.io/master/home/images/docker-1.jpg" alt="aa-1"></p><p>看到以上信息证明Docker安装成功</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Docker介绍&quot;&gt;&lt;a href=&quot;#Docker介绍&quot; class=&quot;headerlink&quot; title=&quot;Docker介绍&quot;&gt;&lt;/a&gt;Docker介绍&lt;/h2&gt;&lt;p&gt;Docker 是一个开源的应用容器引擎，基于 Go 语言 并遵从Apache2.0协议开源。
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>SaltStack自动化运维</title>
    <link href="http://yoursite.com/2017/12/27/saltstack/"/>
    <id>http://yoursite.com/2017/12/27/saltstack/</id>
    <published>2017-12-27T12:52:31.000Z</published>
    <updated>2017-12-30T12:30:44.577Z</updated>
    
    <content type="html"><![CDATA[<h2 id="SaltStack简介"><a href="#SaltStack简介" class="headerlink" title="SaltStack简介"></a>SaltStack简介</h2><p>SaltStack 是一种基于 C/S 架构的服务器基础架构集中化管理平台，管理端称为 Master，客户端称为 Minion。SaltStack 具备配置管理、远程执行、监控等功能，一般可以理解为是简化版的 Puppet 和加强版的 Func。SaltStack 本身是基于 Python 语言开发实现，结合了轻量级的消息队列软件 ZeroMQ 与 Python 第三方模块（Pyzmq、PyCrypto、Pyjinjia2、python-msgpack 和 PyYAML 等）构建。</p><p>通过部署 SaltStack 环境，运维人员可以在成千上万台服务器上做到批量执行命令，根据不同的业务特性进行配置集中化管理、分发文件、采集系统数据及软件包的安装与管理等。</p><p><strong>Saltstack架构</strong></p><p><img src="https://raw.githubusercontent.com/xujingrui/xujingrui.github.io/master/home/images/saltstack-2.jpg" alt="aa"></p><p><strong>SaltStack 具有以下特性：</strong></p><ul><li>部署简单、方便</li><li>支持大部分UNIX/Linux及Windows环境</li><li>主从集中化管理</li><li>配置简单、功能强大、扩展性强</li><li>主控端（master）和被控端（minion）基于证书认证，安全可靠</li><li>支持API及自定义模块，可通过Python轻松扩展</li></ul><h2 id="SaltStack安装"><a href="#SaltStack安装" class="headerlink" title="SaltStack安装"></a>SaltStack安装</h2><p><strong>应用场景</strong></p><table><thead><tr><th>项目</th><th>ip</th><th>系统</th><th>角色</th></tr></thead><tbody><tr><td>Node1</td><td>192.168.222.130</td><td>CentOS release 6.8 (Final)　</td><td>master</td></tr><tr><td>Node2</td><td>192.168.222.131</td><td>CentOS release 6.8 (Final)　</td><td>minion</td></tr></tbody></table><p><strong>安装SaltStack源</strong></p><p><i class="icon-file"></i> Centos6.X：安装SaltStack源</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum -y install https://repo.saltstack.com/yum/redhat/salt-repo-latest-2.el6.noarch.rpm</span><br></pre></td></tr></table></figure><p><i class="icon-file"></i> Centos7.X：安装SaltStack源</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum -y install https://repo.saltstack.com/yum/redhat/salt-repo-latest-2.el7.noarch.rpm</span><br></pre></td></tr></table></figure><p><strong>master端</strong></p><p>服务端同时也是客户端：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">yum -y install salt-master</span><br><span class="line">yum -y install salt-minion</span><br><span class="line"></span><br><span class="line">[root@Node1 ~]# salt-master -V</span><br><span class="line">Salt Version:</span><br><span class="line">           Salt: 2017.7.2</span><br><span class="line"></span><br><span class="line">[root@Node1 ~]# salt-minion -V</span><br><span class="line">Salt Version:</span><br><span class="line">           Salt: 2017.7.2</span><br></pre></td></tr></table></figure></p><p>修改配置文件：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/salt/master</span><br><span class="line">interface: 192.168.222.130  #此处是server端监听的地址。</span><br><span class="line">auto_accept: True    #此处是自动接受客户端发送过来的key，如果服务器很多的话，需要开启该功能。</span><br><span class="line"></span><br><span class="line">#下面几行去除#号注释或在尾行添加</span><br><span class="line">file_roots:</span><br><span class="line">  base:</span><br><span class="line">    - /srv/salt/</span><br><span class="line"></span><br><span class="line">#创建/srv/salt/目录</span><br><span class="line">mkdir -p /srv/salt/</span><br><span class="line"></span><br><span class="line">vi /etc/salt/minion</span><br><span class="line">master: 192.168.222.130  #这里改成你的master服务器地址</span><br><span class="line">id: Node1   #建议这里修改成主机名，便于master端分辨</span><br><span class="line"></span><br><span class="line">#在配置文件末尾加入下面内容，每隔5分钟自动同步master配置，效果等同于在客户端执行salt-call state.highstate或在server端执行 salt &apos;*&apos;state.highstate</span><br><span class="line">schedule:</span><br><span class="line">  highstate:</span><br><span class="line">    function: state.highstate</span><br><span class="line">    minutes: 5</span><br></pre></td></tr></table></figure></p><p>启动服务：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[root@Node1 ~]# chkconfig salt-master on</span><br><span class="line">[root@Node1 ~]# chkconfig salt-minion on</span><br><span class="line">[root@Node1 ~]# chkconfig |grep salt</span><br><span class="line">salt-master    0:关闭1:关闭2:启用3:启用4:启用5:启用6:关闭</span><br><span class="line">salt-minion    0:关闭1:关闭2:启用3:启用4:启用5:启用6:关闭</span><br><span class="line">[root@Node1 ~]# /etc/init.d/salt-master start</span><br><span class="line">Starting salt-master daemon:                               [确定]</span><br><span class="line">[root@Node1 ~]# /etc/init.d/salt-minion start</span><br><span class="line">Starting salt-minion:root:Node1 daemon: OK</span><br></pre></td></tr></table></figure><p><strong>minion端</strong></p><p>安装客户端：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">yum -y install salt-minion</span><br><span class="line"></span><br><span class="line">[root@Node2 ~]# salt-minion -V</span><br><span class="line">Salt Version:</span><br><span class="line">           Salt: 2017.7.2</span><br></pre></td></tr></table></figure><p>修改配置文件：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/salt/minion</span><br><span class="line">master: 192.168.222.130  #这里改成你的master服务器地址</span><br><span class="line">id: Node2   #建议这里修改成主机名，便于master端分辨</span><br><span class="line"></span><br><span class="line">#在配置文件末尾加入下面内容，每隔5分钟自动同步master配置，效果等同于在客户端执行salt-call state.highstate或在server端执行 salt &apos;*&apos;state.highstate</span><br><span class="line">schedule:</span><br><span class="line">  highstate:</span><br><span class="line">    function: state.highstate</span><br><span class="line">    minutes: 5</span><br></pre></td></tr></table></figure></p><p>启动服务：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@Node2 ~]# chkconfig |grep salt</span><br><span class="line">salt-minion    0:关闭1:关闭2:启用3:启用4:启用5:启用6:关闭</span><br><span class="line">[root@Node2 ~]# /etc/init.d/salt-minion start</span><br><span class="line">Starting salt-minion:root:Node2 daemon: OK</span><br></pre></td></tr></table></figure></p><p><strong>测试SaltStack功能</strong></p><p>master端操作：<br><img src="https://raw.githubusercontent.com/xujingrui/xujingrui.github.io/master/home/images/saltstack-1.jpg" alt="salt"></p><h2 id="SaltStack使用"><a href="#SaltStack使用" class="headerlink" title="SaltStack使用"></a>SaltStack使用</h2><p>SaltStack证书管理</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">salt-key –L       #查看所有minion-key      </span><br><span class="line">salt-key –a       #接受某个minion-key      </span><br><span class="line">salt-key –A       #接受所有minion-key  </span><br><span class="line">salt-key –d       #删除某个minion-key  </span><br><span class="line">salt-key –D       #删除所有minion-key</span><br></pre></td></tr></table></figure><p><strong>SaltStack命令介绍:</strong></p><p>命令格式：salt [options] [arguments]</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">salt ‘*’ test.ping</span><br></pre></td></tr></table></figure><p><strong>SaltStack minion匹配方式</strong></p><ul><li>Glob（salt默认的target类型，使用shell的通配符来指定一个或多个Minion ID）</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">salt &quot;*&quot; test.ping 或 salt ‘*’ test.ping</span><br></pre></td></tr></table></figure><ul><li>pcre兼容正则表达式</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">salt –E ‘^[m|M]in.[e|o|u]n$’ test.ping</span><br></pre></td></tr></table></figure><ul><li>Subnet(通过指定一个IPv4地址或一个CIDR的IPv4子网)  </li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">salt –S 192.168.0.42 test.ping  </span><br><span class="line">salt –s 192.168.0.0/16 test.ping</span><br></pre></td></tr></table></figure><ul><li>Grains(salt可以通过操作系统、CPU架构及自定义信息等机器特征进行target Minion)</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">salt –G ‘os:Ubuntu’ test.ping  </span><br><span class="line">Salt –G ‘os_family:Debian’ test.ping</span><br></pre></td></tr></table></figure><ul><li>pillar（salt支持通过pillar数据进行匹配）</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Salt –I ‘my_val:my_val’ test.ping</span><br></pre></td></tr></table></figure><ul><li>混合（compound)</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Salt –C ‘web* or G@os:Arch’ test.ping</span><br></pre></td></tr></table></figure><ul><li>节点组（Nodegroup）  节点组需要事先定义，配置方法如下：</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/salt/master  nodegroups:  node: &apos;L@node1,node2&apos;  </span><br><span class="line">salt -N node test.ping</span><br></pre></td></tr></table></figure><h2 id="SaltStack常用模块"><a href="#SaltStack常用模块" class="headerlink" title="SaltStack常用模块"></a>SaltStack常用模块</h2><ul><li style="list-style: none"><input type="checkbox" checked> test模块（测试功能）</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">salt &quot;*&quot; test.ping</span><br></pre></td></tr></table></figure><ul><li style="list-style: none"><input type="checkbox" checked> status模块（查看系统信息）</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">salt &quot;*&quot; status.diskstats     #查看磁盘信息  </span><br><span class="line">salt &quot;*&quot; status.meminfo       #查看内存信息  </span><br><span class="line">salt &quot;*&quot; status.w             #w命令返回信息</span><br></pre></td></tr></table></figure><ul><li style="list-style: none"><input type="checkbox" checked> cmd.run模块（运行系统命令）</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">salt &quot;*&quot; cmd.run &quot;cat /etc/my.cnf&quot;</span><br></pre></td></tr></table></figure><ul><li style="list-style: none"><input type="checkbox" checked> 查看所有module列表</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">salt &quot;*&quot; sys.list_modules</span><br></pre></td></tr></table></figure><ul><li style="list-style: none"><input type="checkbox" checked> 查看指定module的所有function方法</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">salt &quot;*&quot; sys.list_functions cmd.run</span><br></pre></td></tr></table></figure><ul><li style="list-style: none"><input type="checkbox" checked> 查看指定module用法</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">salt &quot;*&quot; sys.doc cmd.run</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;SaltStack简介&quot;&gt;&lt;a href=&quot;#SaltStack简介&quot; class=&quot;headerlink&quot; title=&quot;SaltStack简介&quot;&gt;&lt;/a&gt;SaltStack简介&lt;/h2&gt;&lt;p&gt;SaltStack 是一种基于 C/S 架构的服务器基础架构集中化管
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Lnmp平台一键部署</title>
    <link href="http://yoursite.com/2017/12/24/LNMP-OneKey/"/>
    <id>http://yoursite.com/2017/12/24/LNMP-OneKey/</id>
    <published>2017-12-24T13:58:18.000Z</published>
    <updated>2017-12-28T13:50:42.912Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一、介绍"><a href="#一、介绍" class="headerlink" title="一、介绍"></a><strong>一、介绍</strong></h2><p>LNMP一键安装包是一个用Linux Shell编写的可以为CentOS/RHEL/Fedora/Aliyun/Amazon、Debian/Ubuntu/Raspbian/DeepinServer/Mint Linux VPS或独立主机安装LNMP(Nginx/MySQL/PHP)、LNMPA(Nginx/MySQL/PHP/Apache)、LAMP(Apache/MySQL/PHP)生产环境的Shell程序。</p><p>官方网站：<a href="https://lnmp.org" target="_blank" rel="noopener">https://lnmp.org</a></p><p>下载地址：</p><table><thead><tr><th style="text-align:center">项目</th><th style="text-align:center">版本</th><th style="text-align:center">MD5</th><th style="text-align:center">大小</th></tr></thead><tbody><tr><td style="text-align:center">下载版</td><td style="text-align:center"><a href="http://soft.vpser.net/lnmp/lnmp1.4.tar.gz" target="_blank" rel="noopener">http://soft.vpser.net/lnmp/lnmp1.4.tar.gz</a></td><td style="text-align:center">06df74d7a2f9bf64fc9a108ad429f1fb</td><td style="text-align:center">134KB</td></tr><tr><td style="text-align:center">完整版</td><td style="text-align:center"><a href="http://soft.vpser.net/lnmp/lnmp1.4-full.tar.gz" target="_blank" rel="noopener">http://soft.vpser.net/lnmp/lnmp1.4-full.tar.gz</a></td><td style="text-align:center">404dea1dc3e61333790486f197f3b7e5</td><td style="text-align:center">467MB</td></tr></tbody></table><h3 id="注意："><a href="#注意：" class="headerlink" title="注意："></a><strong>注意：</strong></h3><blockquote><ul><li>下载完建议先验证MD5</li><li>使用前建议先去官网了解安装过程–&gt; <a href="https://lnmp.org/install.html" target="_blank" rel="noopener">传送门</a></li><li>下载的脚本文件不要放在临时目录（如 /tmp），不要删除脚本文件</li><li>确保机器可以上网，YUM仓库可用</li></ul></blockquote><h2 id="二、安装"><a href="#二、安装" class="headerlink" title="二、安装"></a><strong>二、安装</strong></h2><table><thead><tr><th>项目　　　</th><th>版本</th></tr></thead><tbody><tr><td>Linux</td><td>CentOS release 6.8 (Final)</td></tr><tr><td>Nginx</td><td>1.12.2</td></tr><tr><td>Php-fpm</td><td>5.6.31</td></tr><tr><td>Mysql</td><td>5.7.18</td></tr></tbody></table><ul><li>下载安装脚本:</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget http://soft.vpser.net/lnmp/lnmp1.4-full.tar.gz -o /data/lnmp1.4-full.tar.gz</span><br></pre></td></tr></table></figure><ul><li>解压文件：</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cd /data</span><br><span class="line">tar -xvf lnmp1.4-full.tar.gz</span><br><span class="line">cd lnmp1.4-full</span><br></pre></td></tr></table></figure><ul><li>安装前修改自定义设置：</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">[root@Node1 lnmp1.4-full]# cat lnmp.conf </span><br><span class="line"></span><br><span class="line">Download_Mirror=&apos;https://soft.vpser.net&apos;</span><br><span class="line"></span><br><span class="line">#自定义安装Nginx模块（默认：configure arguments: --user=www --group=www --prefix=/usr/local/nginx --with-http_stub_status_module --with-http_ssl_module --with-http_v2_module --with-http_gzip_static_module --with-ipv6 --with-http_sub_module --with-openssl=/data/lnmp1.4-full/src/openssl-1.0.2l）</span><br><span class="line">Nginx_Modules_Options=&apos;&apos;</span><br><span class="line"></span><br><span class="line">#自定义安装Php-fpm模块(默认：&apos;./configure&apos; &apos;--prefix=/usr/local/php&apos; &apos;--with-config-file-path=/usr/local/php/etc&apos; &apos;--with-config-file-scan-dir=/usr/local/php/conf.d&apos; &apos;--enable-fpm&apos; &apos;--with-fpm-user=www&apos; &apos;--with-fpm-group=www&apos; &apos;--with-mysql=mysqlnd&apos; &apos;--with-mysqli=mysqlnd&apos; &apos;--with-pdo-mysql=mysqlnd&apos; &apos;--with-iconv-dir&apos; &apos;--with-freetype-dir=/usr/local/freetype&apos; &apos;--with-jpeg-dir&apos; &apos;--with-png-dir&apos; &apos;--with-zlib&apos; &apos;--with-libxml-dir=/usr&apos; &apos;--enable-xml&apos; &apos;--disable-rpath&apos; &apos;--enable-bcmath&apos; &apos;--enable-shmop&apos; &apos;--enable-sysvsem&apos; &apos;--enable-inline-optimization&apos; &apos;--with-curl&apos; &apos;--enable-mbregex&apos; &apos;--enable-mbstring&apos; &apos;--with-mcrypt&apos; &apos;--enable-ftp&apos; &apos;--with-gd&apos; &apos;--enable-gd-native-ttf&apos; &apos;--with-openssl&apos; &apos;--with-mhash&apos; &apos;--enable-pcntl&apos; &apos;--enable-sockets&apos; &apos;--with-xmlrpc&apos; &apos;--enable-zip&apos; &apos;--enable-soap&apos; &apos;--with-gettext&apos; &apos;--disable-fileinfo&apos; &apos;--enable-opcache&apos; &apos;--enable-intl&apos; &apos;--with-xsl&apos;)</span><br><span class="line">PHP_Modules_Options=&apos;&apos;</span><br><span class="line"></span><br><span class="line">##MySQL/MariaDB database directory##定义数据库数据目录</span><br><span class="line">MySQL_Data_Dir=&apos;/usr/local/mysql/var&apos;</span><br><span class="line">MariaDB_Data_Dir=&apos;/usr/local/mariadb/var&apos;</span><br><span class="line"></span><br><span class="line">##Default website home directory##Nginx代码目录</span><br><span class="line">Default_Website_Dir=&apos;/home/wwwroot/default&apos;</span><br><span class="line"></span><br><span class="line">##是否安装Nginx Openssl模块</span><br><span class="line">Enable_Nginx_Openssl=&apos;y&apos;</span><br></pre></td></tr></table></figure><ul><li>安装：</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./install.sh</span><br></pre></td></tr></table></figure><ul><li>安装选择：</li></ul><p><img src="https://raw.githubusercontent.com/xujingrui/xujingrui.github.io/master/home/images/onekey-all.jpg" alt="one-key-all"></p><ul><li>安装完成：</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line">============================== Check install ==============================</span><br><span class="line">Checking ...</span><br><span class="line">Nginx: OK</span><br><span class="line">MySQL: OK</span><br><span class="line">PHP: OK</span><br><span class="line">PHP-FPM: OK</span><br><span class="line">Clean src directory...</span><br><span class="line">+------------------------------------------------------------------------+</span><br><span class="line">|          LNMP V1.4 for CentOS Linux Server, Written by Licess          |</span><br><span class="line">+------------------------------------------------------------------------+</span><br><span class="line">|           For more information please visit https://lnmp.org           |</span><br><span class="line">+------------------------------------------------------------------------+</span><br><span class="line">|    lnmp status manage: lnmp &#123;start|stop|reload|restart|kill|status&#125;    |</span><br><span class="line">+------------------------------------------------------------------------+</span><br><span class="line">|  phpMyAdmin: http://IP/phpmyadmin/                                     |</span><br><span class="line">|  phpinfo: http://IP/phpinfo.php                                        |</span><br><span class="line">|  Prober:  http://IP/p.php                                              |</span><br><span class="line">+------------------------------------------------------------------------+</span><br><span class="line">|  Add VirtualHost: lnmp vhost add                                       |</span><br><span class="line">+------------------------------------------------------------------------+</span><br><span class="line">|  Default directory: /app/www                              |</span><br><span class="line">+------------------------------------------------------------------------+</span><br><span class="line">|  MySQL/MariaDB root password: abc123                          |</span><br><span class="line">+------------------------------------------------------------------------+</span><br><span class="line">+-------------------------------------------+</span><br><span class="line">|    Manager for LNMP, Written by Licess    |</span><br><span class="line">+-------------------------------------------+</span><br><span class="line">|              https://lnmp.org             |</span><br><span class="line">+-------------------------------------------+</span><br><span class="line">nginx (pid 108192 108191 108190 108189 108188) is running...</span><br><span class="line">php-fpm is runing!</span><br><span class="line"> SUCCESS! MySQL running (108721)</span><br><span class="line">Active Internet connections (only servers)</span><br><span class="line">Proto Recv-Q Send-Q Local Address               Foreign Address             State      </span><br><span class="line">tcp        0      0 0.0.0.0:60259               0.0.0.0:*                   LISTEN      </span><br><span class="line">tcp        0      0 0.0.0.0:111                 0.0.0.0:*                   LISTEN      </span><br><span class="line">tcp        0      0 0.0.0.0:80                  0.0.0.0:*                   LISTEN      </span><br><span class="line">tcp        0      0 0.0.0.0:22                  0.0.0.0:*                   LISTEN      </span><br><span class="line">tcp        0      0 127.0.0.1:631               0.0.0.0:*                   LISTEN      </span><br><span class="line">tcp        0      0 :::37347                    :::*                        LISTEN      </span><br><span class="line">tcp        0      0 :::3306                     :::*                        LISTEN      </span><br><span class="line">tcp        0      0 :::111                      :::*                        LISTEN      </span><br><span class="line">tcp        0      0 :::22                       :::*                        LISTEN      </span><br><span class="line">tcp        0      0 ::1:631                     :::*                        LISTEN      </span><br><span class="line">Install lnmp takes 65 minutes.</span><br><span class="line">Install lnmp V1.4 completed! enjoy it.</span><br><span class="line"></span><br><span class="line">[root@Node1 lnmp1.4-full]#</span><br></pre></td></tr></table></figure><p>安装过程日志==&gt; <code>/root/lnmp-install.log</code></p><table><thead><tr><th>项目</th><th>目录</th><th>备注</th></tr></thead><tbody><tr><td>Nginx</td><td>/usr/local/nginx</td><td>程序安装</td></tr><tr><td>　</td><td>/etc/init.d/nginx</td><td>启动脚本</td></tr><tr><td>　</td><td>/usr/local/nginx/conf</td><td>配置文件</td></tr><tr><td>　</td><td>/home/wwwroot/default　</td><td>代码路径</td></tr><tr><td>　</td><td>/home/wwwlogs</td><td>日志路径</td></tr><tr><td>Php-Fpm　</td><td>/usr/local/php</td><td>程序安装</td></tr><tr><td>　</td><td>/etc/init.d/php-fpm</td><td>启动脚本</td></tr><tr><td>　</td><td>/usr/local/php/etc</td><td>配置文件</td></tr><tr><td>　</td><td>/usr/local/php/var/log</td><td>日志路径</td></tr><tr><td>　</td><td>/tmp/php-cgi.sock</td><td>SOCK路径</td></tr><tr><td>Mysql</td><td>/usr/local/mysql</td><td>程序安装</td></tr><tr><td>　</td><td>/etc/init.d/mysql</td><td>启动脚本</td></tr><tr><td>　</td><td>/etc/my.cnf</td><td>配置文件</td></tr><tr><td>　</td><td>/usr/local/mysql/var</td><td>数据目录</td></tr><tr><td>　</td><td>/tmp/mysql.sock</td><td>SOCK路径</td></tr></tbody></table><h3 id="建议："><a href="#建议：" class="headerlink" title="建议："></a><strong>建议：</strong></h3><p>将<code>/home/wwwroot/default</code>路径下的文件都删除！</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">.</span><br><span class="line">├── index.html</span><br><span class="line">├── lnmp.gif</span><br><span class="line">├── ocp.php</span><br><span class="line">├── phpinfo.php</span><br><span class="line">├── phpmyadmin</span><br></pre></td></tr></table></figure><h3 id="注意：-1"><a href="#注意：-1" class="headerlink" title="注意："></a><strong>注意：</strong></h3><p>LNMP一键安装会将crond服务重新安装，安装后没有启动服务,需要手动启动一次<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@Node1 /]# chkconfig |grep crond</span><br><span class="line">crond          0:关闭1:关闭2:启用3:启用4:启用5:启用6:关闭</span><br><span class="line">[root@Node1 /]# /etc/init.d/crond status</span><br><span class="line">crond 已停</span><br><span class="line">[root@Node1 /]# /etc/init.d/crond start</span><br><span class="line">正在启动 crond：                                           [确定]</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;一、介绍&quot;&gt;&lt;a href=&quot;#一、介绍&quot; class=&quot;headerlink&quot; title=&quot;一、介绍&quot;&gt;&lt;/a&gt;&lt;strong&gt;一、介绍&lt;/strong&gt;&lt;/h2&gt;&lt;p&gt;LNMP一键安装包是一个用Linux Shell编写的可以为CentOS/RHEL/Fed
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>GitHup上image展示</title>
    <link href="http://yoursite.com/2017/12/23/image/"/>
    <id>http://yoursite.com/2017/12/23/image/</id>
    <published>2017-12-23T12:38:30.000Z</published>
    <updated>2017-12-27T13:33:29.919Z</updated>
    
    <content type="html"><![CDATA[<h3 id="方式一："><a href="#方式一：" class="headerlink" title="方式一："></a>方式一：</h3><h6 id="GitHup上点击图片文件后的Url，可以正常访问。"><a href="#GitHup上点击图片文件后的Url，可以正常访问。" class="headerlink" title="GitHup上点击图片文件后的Url，可以正常访问。"></a>GitHup上点击图片文件后的Url，可以正常访问。</h6><ul><li><a href="https://github.com/xujingrui/xujingrui.github.io/blob/master/home/images/31a58PIC6NY_1024.jpg?raw=true" target="_blank" rel="noopener">https://github.com/xujingrui/xujingrui.github.io/blob/master/home/images/31a58PIC6NY_1024.jpg?raw=true</a><br><img src="https://github.com/xujingrui/xujingrui.github.io/blob/master/home/images/31a58PIC6NY_1024.jpg?raw=true" alt="abc"></li></ul><h3 id="方式二："><a href="#方式二：" class="headerlink" title="方式二："></a>方式二：</h3><h6 id="GitHup上点击图片文件后的Url，在浏览器开打URL链接，Url发生改变，但是可以正常访问。"><a href="#GitHup上点击图片文件后的Url，在浏览器开打URL链接，Url发生改变，但是可以正常访问。" class="headerlink" title="GitHup上点击图片文件后的Url，在浏览器开打URL链接，Url发生改变，但是可以正常访问。"></a>GitHup上点击图片文件后的Url，在浏览器开打URL链接，Url发生改变，但是可以正常访问。</h6><ul><li><a href="https://raw.githubusercontent.com/xujingrui/xujingrui.github.io/master/home/images/31a58PIC6NY_1024.jpg" target="_blank" rel="noopener">https://raw.githubusercontent.com/xujingrui/xujingrui.github.io/master/home/images/31a58PIC6NY_1024.jpg</a><br><img src="https://raw.githubusercontent.com/xujingrui/xujingrui.github.io/master/home/images/31a58PIC6NY_1024.jpg" alt="bbb"></li></ul><h3 id="方式三："><a href="#方式三：" class="headerlink" title="方式三："></a>方式三：</h3><h6 id="GitHup上图片Url，无法访问。"><a href="#GitHup上图片Url，无法访问。" class="headerlink" title="GitHup上图片Url，无法访问。"></a>GitHup上图片Url，无法访问。</h6><ul><li><a href="https://github.com/xujingrui/xujingrui.github.io/blob/master/home/images/31a58PIC6NY_1024.jpg" target="_blank" rel="noopener">https://github.com/xujingrui/xujingrui.github.io/blob/master/home/images/31a58PIC6NY_1024.jpg</a><br><img src="https://github.com/xujingrui/xujingrui.github.io/blob/master/home/images/31a58PIC6NY_1024.jpg" alt="ccc"></li></ul><p><strong>图片外链可以参考Url的方法</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/xujingrui/xujingrui.github.io/blob/master/home/images/图片名称?raw=true</span><br></pre></td></tr></table></figure><p>或<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://raw.githubusercontent.com/xujingrui/xujingrui.github.io/master/home/images/图片名称</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;方式一：&quot;&gt;&lt;a href=&quot;#方式一：&quot; class=&quot;headerlink&quot; title=&quot;方式一：&quot;&gt;&lt;/a&gt;方式一：&lt;/h3&gt;&lt;h6 id=&quot;GitHup上点击图片文件后的Url，可以正常访问。&quot;&gt;&lt;a href=&quot;#GitHup上点击图片文件后的Url，
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://yoursite.com/2017/12/22/hello-world/"/>
    <id>http://yoursite.com/2017/12/22/hello-world/</id>
    <published>2017-12-22T16:30:10.178Z</published>
    <updated>2017-12-22T16:30:10.178Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
    
  </entry>
  
</feed>
